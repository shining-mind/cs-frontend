import utf16CharIterator from './utf16-char-iterator';

describe('utf16CharIterator', () => {
  test('iterate smile', () => {
    expect(Array.from(utf16CharIterator('ðŸ˜€'))).toEqual(['ðŸ˜€']);
  });

  test('iterate message with emojis', () => {
    expect(Array.from(utf16CharIterator('Hello world! ðŸš© How are you? ðŸ˜€'))).toEqual([
      'H', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd', '!', ' ', 'ðŸš©', ' ',
      'H', 'o', 'w', ' ', 'a', 'r', 'e', ' ', 'y', 'o', 'u', '?', ' ', 'ðŸ˜€',
    ]);
  });

  test('should ignore invalid chars', () => {
    expect(Array.from(utf16CharIterator('\uD83D'))).toEqual([]);
    expect(Array.from(utf16CharIterator('Hi\uD83D!'))).toEqual(['H', 'i', '!']);
    expect(Array.from(utf16CharIterator('ðŸ˜€\uD83DðŸš©'))).toEqual(['ðŸ˜€', 'ðŸš©']);
  });

  test('should return 0 items for empty string', () => {
    expect(Array.from(utf16CharIterator(''))).toEqual([]);
  });
});
